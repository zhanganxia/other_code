1.进程池(用于大批量的复制任务)
----------------------multiprocessing.--------
    创建进程池：multiprocessing．Ｐｏｏｌ（３）
    ３：表示进程池进程的最大数量
    进程池执行任务的本质：从进程池中找一个空闲的进程去执行指定的任务

    进程池使用同步的方式去执行这个任务，进程池中的进程会按照一定的顺序等待其他进程
    执行完成以后再依次执行

    进程池使用异步的方式执行，那么进程池中的进程不会等待，同时执行对应任务

    主进程不会等待进程池使用异步方式把任务执行完
    关闭进程池不再接收其他任务：pool.close()

2.进程池中queue的使用
--------------------------------------------------
创建进程池队列 ：multiprocessing.manager.queue()




3.飞鸽传输--发送文件
------------------------------------------------
流程：
    3.1 以UDP的方式向飞秋2发送“接收文件提醒”消息
    3.2 对方在接收文件的时候和发送方建立tcp的链接，发送
        请求的文件信息（消息的包编号和文件序号），发送方根据
        请求信息找到对应的文件，然后把文件的二进制数据发送给
        接收方
    
步骤：
    1.添加菜单选项

    2.添加函数：send_file_msg():
        1)获取对方的ip地址
        2）接收用户发送的内容
        3）准备发送文件的消息内容:file_info   
            "|" -->按位或  %x-->格式化输出为十六进制文件
                在build_msg中对content前面的发送消息内容做了匹配
                在file_info中我们只需要准备发送文件所需要的内容

        4）在global模块添加文件消息，和文件命令选项、文件类型变量
        5）发送文件消息send_msg(send_file_info,dest_ip)

    3.建立TCP的相关操作（准备TCP服务端，独立进程）：发送文件和下载文件
        1）创建TCP套接字
        2）绑定端口号
        3）设置监听listen
        4）创建等待链接客户端的套接字
        5）接收客户端请求数据（需独立提取出来一个函数）
        6）在两个终端分别运行main.py和feigetcp.py,输出客户端请求下载的文件信息

    4.使用创建子进程的方式，将feigetcp.py做为子进程添加到程序入口中
        将feigetcp.py中的程序入口修改为函数名

        注意：此处需要设置子进程为守护主进程
        程序退出立即释放端口：
            socket.setsockopt(socket.SOL_SOCKET,socket.SO_REUSEADDR,True)
            






